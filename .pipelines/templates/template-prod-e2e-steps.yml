parameters:
  location: ''
  subscription: ''
  azureDevOpsE2EJSONSPN: ''

steps:
- template: ./template-az-cli-login.yml
  parameters:
    azureDevOpsJSONSPN: ${{ parameters.azureDevOpsE2EJSONSPN }}
- script: |
    set -e
    export LOCATION=${{ parameters.location }}
    export AZURE_SUBSCRIPTION_ID=${{ parameters.subscription }}

    echo ${{ parameters.azureDevOpsE2EJSONSPN }} | base64 -d -w 0 > devops-spn.json
    export AZURE_CLIENT_ID=$(cat devops-spn.json | jq -r '.clientId')
    export AZURE_CLIENT_SECRET=$(cat devops-spn.json | jq -r '.clientSecret')
    export AZURE_TENANT_ID=$(cat devops-spn.json | jq -r '.tenantId')
    rm devops-spn.json

    set -x
    . ./hack/e2e/run-rp-and-e2e.sh

    deploy_e2e_deps
    run_e2e
  displayName: ðŸš€ Run ${{ parameters.location }} E2E
- script: |
    export LOCATION=${{ parameters.location }}
    export AZURE_SUBSCRIPTION_ID=${{ parameters.subscription }}

    echo ${{ parameters.azureDevOpsE2EJSONSPN }} | base64 -d -w 0 > devops-spn.json
    export AZURE_CLIENT_ID=$(cat devops-spn.json | jq -r '.clientId')
    export AZURE_CLIENT_SECRET=$(cat devops-spn.json | jq -r '.clientSecret')
    export AZURE_TENANT_ID=$(cat devops-spn.json | jq -r '.tenantId')
    rm devops-spn.json

    set -x
    . ./hack/e2e/run-rp-and-e2e.sh

    clean_e2e
  condition: succeededOrFailed()
  displayName: ðŸ§¹ Clean up after ${{ parameters.location }} E2E
